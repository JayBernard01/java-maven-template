<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ca.ulaval.glo4002</groupId>
    <artifactId>template</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>application</module>
    </modules>

    <properties>
        <java.release>18</java.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-install-plugin.version>3.1.3</maven-install-plugin.version>
        <maven-deploy-plugin.version>3.1.3</maven-deploy-plugin.version>
        <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
        <maven-site-plugin.version>3.20.0</maven-site-plugin.version>
        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>
        <maven-project-info-reports-plugin.version>3.7.0</maven-project-info-reports-plugin.version>

        <junit.version>5.11.0</junit.version>
        <mockito.version>5.13.0</mockito.version>
        <surefire.version>3.1.2</surefire.version>

        <exec-maven-plugin.version>3.4.1</exec-maven-plugin.version>
        <spotless.version>2.43.0</spotless.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ca.ulaval.glo4002</groupId>
                <artifactId>application</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>3.24.2</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>2.43.0</version>
                    <configuration>
                        <!-- https://github.com/diffplug/spotless/tree/main/plugin-maven -->

                        <!-- language-specific format -->
                        <java>
                            <!-- files included in analysis -->
                            <includes>
                                <include>src/main/java/**/*.java</include>
                                <include>src/test/java/**/*.java</include>
                            </includes>

                            <replaceRegex>
                                <name>Ensure blank line before for</name>
                                <searchRegex>(?&lt;=;)\n*\s*(?=for)</searchRegex>
                                <replacement>${line.separator}${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure no blank line before for with no code before</name>
                                <searchRegex>(?&lt;=\{)\n*\s*(?=for)</searchRegex>
                                <replacement>${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure blank line before if</name>
                                <searchRegex>(?&lt;=;)\n*\s*(?=if)</searchRegex>
                                <replacement>${line.separator}${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure no blank line before if with no code before</name>
                                <searchRegex>(?&lt;=\{)\n*\s*(?=if)</searchRegex>
                                <replacement>${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure blank line before return</name>
                                <searchRegex>(?&lt;=;)\n*\s*(?=return)</searchRegex>
                                <replacement>${line.separator}${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure no blank line before returns with no code before</name>
                                <searchRegex>(?&lt;=\{)\n*\s*(?=return)</searchRegex>
                                <replacement>${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure blank line before try</name>
                                <searchRegex>(?&lt;=;)\n*\s*(?=try)</searchRegex>
                                <replacement>${line.separator}${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure no blank line before try with no code before</name>
                                <searchRegex>(?&lt;=\{)\n*\s*(?=try)</searchRegex>
                                <replacement>${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure blank line before catch</name>
                                <searchRegex>(?&lt;=;)\n*\s*(?=catch)</searchRegex>
                                <replacement>${line.separator}${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure no blank line before catch with no code before</name>
                                <searchRegex>(?&lt;=\{)\n*\s*(?=catch)</searchRegex>
                                <replacement>${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure blank line before while</name>
                                <searchRegex>(?&lt;=;)\n*\s*(?=while)</searchRegex>
                                <replacement>${line.separator}${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure no blank line before while with no code before</name>
                                <searchRegex>(?&lt;=\{)\n*\s*(?=while)</searchRegex>
                                <replacement>${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure blank line before attribute</name>
                                <searchRegex>(?&lt;=;)\n*\s*(?=private|public|protected)</searchRegex>
                                <replacement>${line.separator}${line.separator}</replacement>
                            </replaceRegex>

                            <replaceRegex>
                                <name>Ensure blank line before first attribute</name>
                                <searchRegex>(?&lt;=\{)\n*\s*(?=private|public|protected)</searchRegex>
                                <replacement>${line.separator}</replacement>
                            </replaceRegex>

                            <!-- https://github.com/palantir/palantir-java-format -->
                            <palantirJavaFormat/>
                        </java>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven-project-info-reports-plugin.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <release>${java.release}</release>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${surefire.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
